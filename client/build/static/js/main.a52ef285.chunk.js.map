{"version":3,"sources":["images/na.jpg","components/Nav.js","components/Header/index.js","utils/API.js","components/Button.js","components/BookList/index.js","components/pages/Search/index.js","components/pages/Saved/index.js","components/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Nav","className","href","id","Header","name","axios","get","process","delete","bookData","post","Button","props","savedPage","onClick","e","preventDefault","API","then","res","console","log","catch","err","title","subtitle","authors","image","link","description","BookList","children","BookListItem","rel","target","src","alt","Search","useState","books","setBooks","bookSearch","setBookSearch","value","onChange","event","type","placeholder","data","items","map","book","thumbnail","undefined","volumeInfo","imageLinks","notImage","key","infoLink","Saved","favoriteBooks","setFavoriteBooks","useEffect","length","_id","Footer","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a52ef285.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/na.b0e63b1e.jpg\";","\nimport React from 'react'\n\nconst Nav = () => {\n    return (\n        <nav className=\"blue-grey darken-3\">\n            <div className=\"nav-wrapper\">\n                <a href=\"/search\" className=\"brand-logo center\">Google Books</a>\n                <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\">\n                    <li><a href=\"/search\">Search</a></li>\n                    <li><a href=\"/saved\">Saved</a></li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Nav\n","import React from 'react';\nimport \"./style.css\";\n\nconst Header = () => {\n    return (\n        <header id=\"header\">\n            <h1>Google Books Search</h1>\n            <p>Search for and Save Books of Interest</p>\n        </header>\n    )\n}\n\nexport default Header\n","import axios from \"axios\";\n\nexport default {\n    // Search for books\n    searchBooks: function (name) {\n        const length = \"10\";\n        const apiK = process.env.REACT_APP_API_KEY;\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${name}&printType=books&maxResults=${length}&key=${apiK}`)\n    },\n    // Gets all books\n    getBooks: function () {\n        return axios.get(\"/api/books\");\n    },\n    // Deletes the book with the given id\n    deleteBook: function (id) {\n        return axios.delete(\"/api/books/\" + id);\n    },\n    // Saves a book to the database\n    saveBook: function (bookData) {\n        return axios.post(\"/api/books\", bookData);\n    }\n};\n","import React from 'react';\nimport API from \"../utils/API\";\n\nconst Button = (props) => {\n\n    const handleBookSave = (e) => {\n        e.preventDefault();\n        API.saveBook({\n            title: props.title,\n            subtitle: props.subtitle,\n            authors: props.authors,\n            image: props.image,\n            link: props.link,\n            description: props.description\n        }).then(res => console.log(\"Book Saved\"))\n            .catch(err => console.log(err));\n    }\n\n    const handleBookDelete = (e) => {\n        e.preventDefault();\n        API.deleteBook(props.id).then(res => console.log(\"Book Removed\"))\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <>\n            {props.savedPage ? (\n                <button className=\"btn red\" onClick={handleBookDelete} >Remove</button>\n            ) : (\n                <button className=\"btn lime darken-3\" onClick={handleBookSave}>Save</button>\n            )}</>\n    )\n}\n\nexport default Button;\n","import React from \"react\";\nimport \"./style.css\";\nimport Button from '../Button';\n\n// BookList renders a materialize list item\nexport function BookList({ children }) {\n    return <ul className=\"list-group\">{children}</ul>;\n}\n\n// BookListItem renders a materialize list item containing data from the Google Books api call\nexport function BookListItem({ id, title, subtitle, authors, image, link, description, savedPage }) {\n    return (\n        <li className=\"list-group-item blue-grey lighten-2\" id={id}>\n            <div className=\"row\">\n                <div className=\"col s12 m7\" id=\"titleDiv\">\n                    <h4>{title}</h4>\n                    <h6>{subtitle}</h6>\n                    <p>{authors}</p>\n                </div>\n                <div className=\"col s12 m5\" id=\"buttonsDiv\">\n                    <a className=\"btn lime darken-2\"\n                        rel=\"noreferrer noopener\"\n                        target=\"_blank\"\n                        href={link}\n                    >\n                        View\n                        </a>\n                    {savedPage ? (\n                        <Button id={id} savedPage={savedPage} />\n                    ) : (\n                        <Button id={id} title={title} subtitle={subtitle} authors={authors} image={image} link={link} description={description} savedPage={savedPage}/>)}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s12 m5 l3\">\n                    <img src={image} alt=\"Book cover\" />\n                </div>\n                <div className=\"col s12 m7 l9\">\n                    <p>{description}</p>\n                </div>\n            </div>\n        </li>\n    );\n}\n","import React, { useState } from 'react';\nimport { BookList, BookListItem } from \"../../BookList\";\nimport API from \"../../../utils/API\";\nimport \"./style.css\";\nimport notImage from \"../../../images/na.jpg\";\n\nconst Search = () => {\n\n    const [books, setBooks] = useState([]);\n    const [bookSearch, setBookSearch] = useState(\"\");\n\n    const handleInputChange = event => {\n        // Destructure the name and value properties off of event.target\n        // Update the appropriate state\n        const { value } = event.target;\n        setBookSearch(value);\n    };\n\n    const handleFormSubmit = event => {\n        // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n        event.preventDefault();\n        API.searchBooks(bookSearch)\n            .then(res => {\n                setBooks(res.data.items)\n            })\n            .catch(err => console.log(err));\n    };\n\n    return (\n        <main className=\"container\">\n            <form>\n                <h3>Book Search</h3>\n                <div className=\"input-field\">\n                    <input id=\"search\" name=\"bookSearch\" value={bookSearch} onChange={handleInputChange} type=\"text\" placeholder=\"Search by Title\"></input>\n                    <button className=\"btn waves-effect waves-ligth\" onClick={handleFormSubmit}>Search</button>\n                </div>\n            </form>\n            <p className=\"lime-text\">Results</p>\n\n            <BookList>\n                {books.map(book => {\n                    let thumbnail = \"\";\n                    if (book.volumeInfo.imageLinks === undefined) {\n                        thumbnail = notImage;\n                    }\n                    else {\n                        thumbnail = book.volumeInfo.imageLinks.thumbnail;\n                    }\n                    return (\n                        <BookListItem\n                            key={book.id}\n                            id={book.id}\n                            title={book.volumeInfo.title}\n                            subtitle={book.volumeInfo.subtitle}\n                            authors={book.volumeInfo.authors}\n                            image={thumbnail}\n                            link={book.volumeInfo.infoLink}\n                            description={book.volumeInfo.description}\n                            savedPage={false}\n                        ></BookListItem>)\n                })}\n            </BookList>\n        </main>\n    )\n}\n\nexport default Search\n","import React, { useState, useEffect } from 'react';\nimport { BookList, BookListItem } from \"../../BookList\";\nimport \"./style.css\";\nimport API from \"../../../utils/API\";\n\n\nconst Saved = () => {\n\n    const [favoriteBooks, setFavoriteBooks] = useState([]);\n\n    useEffect(() => {\n        API.getBooks()\n            .then(res => {\n                setFavoriteBooks(res.data);\n            })\n            .catch(err => console.log(err))\n    })\n\n    return (\n        <main className=\"container\">\n            <p className=\"lime-text\">Saved Books</p>\n            {favoriteBooks.length ?\n                (\n                    <BookList>\n                        {favoriteBooks.map(book => {\n                            return (\n                                <BookListItem\n                                    key={book._id}\n                                    id={book._id}\n                                    title={book.title}\n                                    subtitle={book.subtitle}\n                                    authors={book.authors}\n                                    image={book.image}\n                                    link={book.link}\n                                    description={book.description}\n                                    savedPage={true}\n                                ></BookListItem>)\n                        })})\n                    </BookList>\n                )\n                : (<h3>No Books Saved</h3>)}\n        </main>\n    )\n}\n\nexport default Saved;\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <footer className=\"page-footer blue-grey lighten-3\">\n            <div className=\"footer-copyright\">\n                <div className=\"container\">\n                    © 2021 Copyright Text\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from './components/Nav';\nimport Header from './components/Header';\nimport Search from './components/pages/Search';\nimport Saved from './components/pages/Saved';\nimport Footer from './components/Footer';\nimport \"./App.css\";\n\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Nav />\n                <Header />\n                <Switch> \n                    <Route exact path=\"/\" component={Search} />\n                    <Route exact path=\"/search\" component={Search} />\n                    <Route exact path=\"/saved\" component={Saved} />\n                </Switch>\n                <Footer />\n            </Router>\n        </div>\n    );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}